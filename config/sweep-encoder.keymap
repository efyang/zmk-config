/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
  flavor = "tap-preferred"; 
  tapping_term_ms = <150>;
};


/ { 

    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;


    // combos {
    //     compatible = "zmk,combos";
    //     combo_esc {
    //         timeout-ms = <50>;
    //         key-positions = <0 1>;
    //         bindings = <&kp ESC> ;
    //     };
      
    // combo_tab {
    //         timeout-ms = <50>;
    //         key-positions = <10 11>;
    //         bindings = <&kp TAB>;
    //     };
        
    //               combo_lalt {
    //         timeout-ms = <50>;
    //         key-positions = <13 14>;
    //         bindings = <&kp LALT>;
    //     };
    //      combo_lgui {
    //         timeout-ms = <50>;
    //         key-positions = <11 12 >;
    //         bindings = <&kp LGUI>;
    //     };

    //                   combo_ralt {
    //         timeout-ms = <50>;
    //         key-positions = <15 16>;
    //         bindings = <&kp RALT>;
    //     };
    //        combo_rgui {
    //         timeout-ms = <50>;
    //         key-positions = <17 18>;
    //         bindings = <&kp RGUI>;
    //     };
        
    //          combo_del {
    //         timeout-ms = <50>;
    //         key-positions = <8 9>;
    //         bindings = <&kp BKSP>;
    //     };
        

       
    // };

        keymap {
            compatible = "zmk,keymap";
               
            // layer 0
            default_layer {
                bindings = <
                &kp Q &kp W &kp E &kp R &kp T 						        &kp Y &kp U  &kp I    &kp O   &kp P 
                &kp A &kp S &kp D &kp F &kp G 			        	        &kp H &kp J &kp K &kp L &kp SEMI
            &mt LSFT Z &mt LCTRL X &mt LALT C &mt LGUI V &kp B           &kp N &mt LGUI M  &mt LALT CMMA &mt LCTRL DOT &mt LSFT SLASH
                            &kp LGUI &mo 1 &kp SPC  			        	&kp RET &mo 2 &kp RGUI
                >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            };

            // layer 1
            left_layer {
                bindings = <
                &kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT &kp LPRN &kp RPRN &kp AMPS &kp KMLT 
                &kp TILDE  &none  &kp MINUS  &kp EQUAL  &none 			&kp PIPE &kp LBRC  &kp RBRC  &kp SQT &kp DQT
                &kp GRAVE  &none &kp UNDER &kp PLUS &none    			&none &kp LBKT &kp RBKT &kp BSPC  &kp BSLH
                                        &trans &mo 1 &kp SPC  				&kp RET  &mo 3 &trans
                >;
            };	

            // layer 2
            right_layer {
                bindings = <
                &kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5                 &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
                &kp ESC    &none        &kp C_MENU   &kp CAPS     &kp INS 		            &kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp PSCRN 
                &kp LSHFT  &kp LCTRL 	&kp LALT &kp LGUI  &kp DEL 	                        &kp HOME &mt LGUI PG_DN &mt LALT PG_UP &mt LCTRL END &kp LSHFT
                                                &trans    &mo 3  &kp TAB  					&trans &mo 1 &trans
                >;
            };
            
            // layer 3
            tri_layer {
                bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						            &kp F6  &kp F7  &kp F8 &kp F9 &kp F10 
                &reset  &none   &none  &none    &none                              &kp C_PREV  &kp C_STOP &kp C_PP &kp C_NEXT &kp F11
                &bt BT_CLR &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   				&kp K_MUTE &kp C_VOL_UP  &kp C_VOL_DN  &none &kp F12   
                            &trans &trans &trans  					&trans &trans &trans
                >;
            };	
	};
};
